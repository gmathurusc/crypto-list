<% include partials/header.ejs%>
<div id="content" class="main-container margin-top-70">
   <div class="col-md-12 table-responsive">
      <table id="table" class="table table-responsive"
         data-pagination="true"
         data-search="true"
         data-toggle="table"
         data-show-column="true"
         data-filter-control="true"
         data-filter-show-clear= "true"
         data-show-multi-sort="true"
         data-page-size="25" >
          <% include partials/range-filter.ejs%>
         <thead>
            <tr>
               <th scope="col" data-field="rank" class="text-align-left optional rank" data-sortable="true" data-filter-control="input" data-search="true">Rank</th>
               <th scope="col" data-field="name" class="text-align-right required name details" data-sortable="true" data-filter-control="input" data-search="true" style="">Name</th>
               <th scope="col" data-field="symbol" class="text-align-right optional symbol" data-sortable="true" data-filter-control="input" data-search="true">Symbol</th>
               <th scope="col" data-field="market_cap_usd" class="text-align-right optional market_cap_usd" data-sortable="true" data-formatter="numberHumanizer" data-filter-control="input" data-search="true">Market Cap</th>
               <th scope="col" data-field="price_usd" class="text-align-right required price_usd" data-formatter="priceFormatter" data-sortable="true" data-filter-control="input" data-search="true">Price</th>
               <th scope="col" data-field="available_supply" class="text-align-right required available_supply" data-formatter="numberHumanizer" data-sortable="true" data-filter-control="input" data-search="true">Available Supply</th>
               <th scope="col" data-field="total_supply" class="text-align-right optional total_supply"  data-formatter="numberHumanizer" data-sortable="true" data-filter-control="input" data-search="true">Total Supply</th>
               <th scope="col" data-field="max_supply" class="text-align-right optional max_supply" data-formatter="numberHumanizer" data-sortable="true" data-filter-control="input" data-search="true">Max Supply</th>
               <th scope="col" data-field="24h_volume_usd" class="text-align-right optional 24h_volume_usd" data-formatter="numberHumanizer" data-sortable="true" data-filter-control="input" data-search="true">Volume(24 hrs)</th>
               <th scope="col" data-field="percent_change_1h" class="text-align-right optional percent_change_1h" data-formatter="percentageFormatter" data-sortable="true" data-filter-control="input" data-search="true">% Change(1 hr)</th>
               <th scope="col" data-field="percent_change_24h" class="text-align-right required percent_change_24h" data-formatter="percentageFormatter" data-sortable="true" data-filter-control="input" data-search="true">% Change(24 hrs)</th>
               <th scope="col" data-field="percent_change_7d" class="text-align-right optional percent_change_7d" data-formatter="percentageFormatter" data-sortable="true" data-filter-control="input" data-search="true">% Change(7 days)</th>
            </tr>
         </thead>
      </table>
   </div>
</div>
<% include details.ejs%>
<script type="text/javascript">
   var jsonData =  JSON.parse(<%-JSON.stringify(tickers)%>);
   var $table = $('#table');
   
   $(document).ready(function() {
       $table.bootstrapTable('load', jsonData);
       windowSizeActions();
   })

   $(function () {
       $('#hide-show-columns :checkbox').change(function () {
           var id = $(this).attr('id');
           if (this.checked) {
               $table.bootstrapTable('showColumn', id);
           } else {
               $table.bootstrapTable('hideColumn', id);
           }
       })
   });

   function priceFormatter(value) {
       var currencyFormatterObject = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 2 });
       return currencyFormatterObject.format(value);
   }

   function inversePriceFormatter(value) {
       var currencyFormatterObject = new Intl.NumberFormat('en-US', { style: 'decimal', minimumFractionDigits: 2 });
       return currencyFormatterObject.format(1/value);
   }
   
   function decimalFormatter(value) {
       var decimalFormatterObject = new Intl.NumberFormat('en-US', { style: 'decimal', minimumFractionDigits: 0 });
       return decimalFormatterObject.format(value);
   }
   
   function percentageFormatter(value) {
       return value + ' %';
   }
   
   function numberHumanizer(value) {
       if (value == null) {
           return "-"
       }
       return '$' + Humanize.compactInteger(value, 1);
   }
</script>

<% include partials/footer.ejs%>